plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'bitcamp'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

// 자바 소스를 컴파일 할 때 적용할 옵션
tasks.withType(JavaCompile) {
    // 프로젝트의 소스 파일 인코딩을 gradle에게 알려준다.
    // $javac -encoding UTF-8 ..
    options.encoding = 'UTF-8'

    // 소스 파일을 작성할 때 사용할 자바 버전
    sourceCompatibility = '17'

    // 자바 클래스를 실행시킬 JVM의 최소 버전
    targetCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}


dependencies {
    // Spring JDBC 관련 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // Spring webMVC 관련 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Thymeleaf 관련 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Mybatis 관련 라이브러리
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'

    // Lombok 관련 라이브러리
    //compileOnly 'org.projectlombok:lombok'
    //annotationProcessor 'org.projectlombok:lombok'

    // 개발 보조 관련 라이브러리
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // MySQL JDBC 라이브러리
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Amazon AWS Java SDK s3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.530'

    // Spring 설정을 도와주는 라이브러리
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'

}


tasks.named('test') {
    useJUnitPlatform()
}

//war {
//    archiveBaseName = "myapp"
//}